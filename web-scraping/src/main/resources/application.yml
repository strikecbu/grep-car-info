scrap:
  shoushi:
    url: fillFromConfigServer
carinfo:
  kafka:
    producer:
      carInfoEvent:
        topic: car-info-events
      scrapeDoneEvent:
        topic: job-done-events
    consumer:
      scrapeCar:
        topic: scrape-events


spring:
  application:
    name: web-scraping
  config:
    import: optional:configserver:http://localhost:8010
  profiles:
    active: dev
  kafka:
    producer:
      bootstrap-servers: 192.168.0.110:32595,192.168.0.110:32027,192.168.0.110:32448
    consumer:
      bootstrap-servers: 192.168.0.110:32595,192.168.0.110:32027,192.168.0.110:32448
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: scrape-service-group
    admin:
      properties:
        bootstrap.servers: 192.168.0.110:32595,192.168.0.110:32027,192.168.0.110:32448
  zipkin:
    base-url: http://localhost:9411
  sleuth:
    sampler:
      probability: 1
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8011/eureka
  instance:
    prefer-ip-address: true
    instance-id: web-scraping-${spring.cloud.client.ip-address}:${server.port}
server:
  port: 8093

management:
  endpoints:
    web:
      exposure:
        include: health,prometheus
