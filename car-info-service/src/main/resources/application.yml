carinfo:
  schedule:
    scrape-car:
#      fixedDelay: 99999999
      fixedDelay: 300000
  kafka:
    producer:
      scrapeCar:
        topic: scrape-events
    consumer:
      carInfo:
        topic: car-info-events
      jobDone:
        topic: job-done-events

server:
  port: 8092

spring:
  application:
    name: car-info-service
  config:
    import: optional:configserver:http://localhost:8010
  profiles:
    active: dev
  kafka:
    producer:
      bootstrap-servers: 192.168.0.110:32595,192.168.0.110:32027,192.168.0.110:32448
    consumer:
      bootstrap-servers: 192.168.0.110:32595,192.168.0.110:32027,192.168.0.110:32448
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: car-info-service-group
    admin:
      properties:
        bootstrap.servers: 192.168.0.110:32595,192.168.0.110:32027,192.168.0.110:32448
  data:
    mongodb:
#      uri: mongodb://localhost:27017
      uri: mongodb+srv://microservices:<password>@cluster0.t6wct.mongodb.net/?retryWrites=true&w=majority
      database: grep-car-info
  zipkin:
    base-url: http://localhost:9411
  sleuth:
    sampler:
      probability: 1
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8011/eureka
  instance:
    prefer-ip-address: true
    instance-id: car-info-service-${spring.cloud.client.ip-address}:${server.port}
management:
  endpoints:
    web:
      exposure:
        include: "*"
